[
  {
    "objectID": "lectures.html",
    "href": "lectures.html",
    "title": "Lectures",
    "section": "",
    "text": "Lectures\n\nMachine Learning\nNeural Networks Fundamentals\nPerceptron and Linear Classifiers\nActivation Functions in Neural Networks\nMultilayer Perceptron Architecture\nBackpropagation Mechanism\nGradient Descent Optimization\nLearning Rates and Weight Initialization\nOverfitting and Regularization\nConvolutional Neural Networks(CNNs)\nPerformance Metrics\nActivation Functions in Neural Networks"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "",
    "text": "This course provides a comprehensive introduction to deep learning, guiding you through fundamental theoretical concepts, neural network architectures, and hands-on implementation in PyTorch. Through clear explanations supplemented with practical examples and coding exercises, you will gain expertise in constructing deep neural networks, implementing cutting-edge architectures, training and optimizing models, and deploying deep learning systems. The curriculum covers convolutional neural networks, sequence models, generative adversarial networks, and other key architectures. You will master techniques for training robust models at scale and troubleshooting common pitfalls. By the end of this course, you will have the skills to independently implement, debug, and deploy production-ready deep learning models in PyTorch."
  },
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "",
    "text": "This course provides a comprehensive introduction to deep learning, guiding you through fundamental theoretical concepts, neural network architectures, and hands-on implementation in PyTorch. Through clear explanations supplemented with practical examples and coding exercises, you will gain expertise in constructing deep neural networks, implementing cutting-edge architectures, training and optimizing models, and deploying deep learning systems. The curriculum covers convolutional neural networks, sequence models, generative adversarial networks, and other key architectures. You will master techniques for training robust models at scale and troubleshooting common pitfalls. By the end of this course, you will have the skills to independently implement, debug, and deploy production-ready deep learning models in PyTorch."
  },
  {
    "objectID": "index.html#learning-objectives",
    "href": "index.html#learning-objectives",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nUpon Completion of this course, students will be able to:\n\nExplain foundational principles of deep learning including gradient descent and backpropagation\nImplement standard feedforward, convolutional, recurrent, and other neural network architectures in PyTorch\nTrain deep learning models at scale using GPU acceleration and distributed strategies\nOptimize model training using techniques like regularization, normalization, and dropout\nTroubleshoot issues like over/underfitting, imbalance, and vanishing/exploding gradients\nLeverage pretrained models and transfer learning to boost performance\nConstruct custom datasets from scratch and prepare them for use\n\nThe course will consist of three primary components:\n\nLectures will focus on theoretical aspects of deep learning.\nPractical sessions will involve hands-on demonstrations of best practices in deep learning.\nProgramming assignments and defenses will help reinforce the learned concepts and provide practical implementation skills."
  },
  {
    "objectID": "index.html#prerequisites",
    "href": "index.html#prerequisites",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Prerequisites",
    "text": "Prerequisites\nCalculus, Linear Algebra, Statistics, Probability Theory"
  },
  {
    "objectID": "index.html#instructor",
    "href": "index.html#instructor",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Instructor",
    "text": "Instructor\nSina Moghimi\nEmail: mogimi.s@phystech.edu\nOffice Hours: Available by request."
  },
  {
    "objectID": "index.html#communication",
    "href": "index.html#communication",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Communication",
    "text": "Communication\nThis page function as the main hub for the course. Discussion threads are available at discussion page for questions related to the course and for addressing coding problems or bugs. Lecture duration is 4 months (1 Semester)."
  },
  {
    "objectID": "index.html#lectures",
    "href": "index.html#lectures",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Lectures",
    "text": "Lectures\nLectures will be held once a week on Mondays. Lectures notes will be linked on the Lecture Notes after the lecture."
  },
  {
    "objectID": "index.html#practical-sessions",
    "href": "index.html#practical-sessions",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Practical Sessions",
    "text": "Practical Sessions\nPractical Sessions will be held once a week on Wednesdays."
  },
  {
    "objectID": "index.html#grading",
    "href": "index.html#grading",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Grading",
    "text": "Grading\n\n\n\nMain Tasks\nPoints\n\n\n\n\n1. Assignment Neural Network Components\n10\n\n\n2. Assignment Image Classification\n10\n\n\n3. Assignment Music Genre Identification\n10\n\n\n4. Assignment Image Reconstruction\n15\n\n\n5. Assignment Pop Music Generation\n15\n\n\n6. Assignment Image Super-Resolution\n15\n\n\n7. Assignment Music Composition\n15\n\n\n8. Final Exam\n10\n\n\nClass Total\n100\n\n\n\n\n\n\nAuxillary Tasks\nPoints\n\n\n\n\nCapstone Project\n40\n\n\nAttendance\n10\n\n\nAuxillary Total\n50"
  },
  {
    "objectID": "index.html#capstone-project",
    "href": "index.html#capstone-project",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Capstone Project",
    "text": "Capstone Project\nAs an additional task, students are encouraged to begin contemplating their project ideas during the initial weeks of the course. The capstone project serves as an opportunity for students to explore the application of deep learning techniques to interesting topics, such as Computer Vision, NLP, Biology, and Robotics Control. Students may choose to work individually or in groups.\nThe project for this course will require students to write a substantial amount of code to implement a deep learning model. The official programming language and package for this class are Python and PyTorch. Students are free to choose to work with another language or package, but no support will be provided for that.\nIn the context of the course, students have the option to utilize their own data for their project, or they may choose from any publicly available dataset."
  },
  {
    "objectID": "index.html#late-assignments",
    "href": "index.html#late-assignments",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Late Assignments",
    "text": "Late Assignments\nStudents are encouraged to submit their assignments promptly. Late assignments will be penalized by deducting 10% of the total score for each day of delay. However, extension requests may be considered on a case-by-case basis, taking into account extenuating circumstances. It is advisable to reach out and discuss any concerns or challenges before the deadline."
  },
  {
    "objectID": "index.html#policies",
    "href": "index.html#policies",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Policies",
    "text": "Policies\n\nCollaboration\nStudents are encouraged to collaborate on homework assignments and may seek guidance from external sources such as reference materials, peers, or the instructor. However, any material obtained from external sources must be properly cited. It is expected that all submitted solutions are individually written and reflect the student’s own comprehension of the subject matter at the time of writing. Additionally, Python scripts and plots are considered part of the individual write-up and should be completed independently, allowing for the sharing of ideas but not code.\n\n\nAcademic Integrity and Plagerism\nThe comprehension and prevention of plagiarism are of paramount importance. Plagiarism, defined as the unauthorized use of another individual’s ideas, processes, results, or language without proper acknowledgment, represents a fundamental violation of academic integrity.1\nBy submitting any form of work, whether in print or electronically, individuals are required to adhere to the regulations on plagiarism established by MIPT. Furthermore, by submitting the work, individuals grant MIPT the authority to take measures to verify the authenticity of the submitted material, which may include, but is not limited to, employing a plagiarism detection service and sharing the work with other faculty members.2"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Introduction to Deep Learning: Bridging Theory and Practice using PyTorch",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://www.ox.ac.uk/students/academic/guidance/skills/plagiarism↩︎\nElena Bazanova, Academic Writing for Research Purposes, MIPT↩︎"
  }
]